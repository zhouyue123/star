<?xml version="1.0"?>
<!-- Copyright (c) 2011, 2017 Eurotech and/or its affiliates and others All 
	rights reserved. This program and the accompanying materials are made available 
	under the terms of the Eclipse Public License v1.0 which accompanies this 
	distribution, and is available at http://www.eclipse.org/legal/epl-v10.html 
	Contributors: Eurotech - initial API and implementation Red Hat Inc -->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

	<modelVersion>4.0.0</modelVersion>
	<groupId>org.eclipse.kapua</groupId>
	<version>0.2.0-SNAPSHOT</version>
	<artifactId>kapua-rest-api</artifactId>
	<name>${project.artifactId}</name>
	<packaging>war</packaging>
	
	<properties>
		<jersey.version>2.23.2</jersey.version>
		<swagger.version>1.5.10</swagger.version>
		<swagger-ui.version>2.1.4</swagger-ui.version>
    </properties>


	<dependencies>

        <!-- Jersey -->
		<dependency>
			<groupId>org.glassfish.jersey.containers</groupId>
			<artifactId>jersey-container-servlet-core</artifactId>
			<version>${jersey.version}</version>
		</dependency>

		<!-- Swagger for apidoc -->
		<dependency>
			<groupId>io.swagger</groupId>
			<artifactId>swagger-jersey2-jaxrs</artifactId>
			<version>${swagger.version}</version>
		</dependency>

		<!-- Moxy for object marshalling unmarshalling -->
		<dependency>
			<groupId>org.glassfish.jersey.media</groupId>
			<artifactId>jersey-media-moxy</artifactId>
			<version>2.23.2</version>
		</dependency>

		<!-- Apache shiro security framework -->
		<dependency>
			<groupId>org.apache.shiro</groupId>
			<artifactId>shiro-core</artifactId>
			<!-- <version>${shiro.version}</version> -->
			<version>1.2.1</version>
		</dependency>

		<dependency>
			<groupId>org.apache.shiro</groupId>
			<artifactId>shiro-web</artifactId>
			<version>1.2.1</version>
			<!-- <version>${shiro.version}</version> -->
		</dependency>

		<!-- Same version of the Servlet APIs supported in Apache Tomcat 8.0.x -->
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>javax.servlet-api</artifactId>
			<version>3.1.0</version>
			<scope>provided</scope>
		</dependency>

		<!-- Internal dependencies -->
		<dependency>
			<groupId>org.eclipse.kapua</groupId>
			<artifactId>kapua-commons</artifactId>
			<version>0.2.0-SNAPSHOT</version>
		</dependency>
		<dependency>
			<groupId>org.eclipse.kapua</groupId>
			<artifactId>kapua-guice</artifactId>
			<version>0.2.0-SNAPSHOT</version>
		</dependency>
		<dependency>
			<groupId>org.eclipse.kapua</groupId>
			<artifactId>kapua-account-internal</artifactId>
			<version>0.2.0-SNAPSHOT</version>
		</dependency>

		<dependency>
			<groupId>org.eclipse.kapua</groupId>
			<artifactId>kapua-datastore-internal</artifactId>
			<version>0.2.0-SNAPSHOT</version>
		</dependency>

		<dependency>
			<groupId>org.eclipse.kapua</groupId>
			<artifactId>kapua-message-internal</artifactId>
			<version>0.2.0-SNAPSHOT</version>
		</dependency>

		<dependency>
			<groupId>org.eclipse.kapua</groupId>
			<artifactId>kapua-security-shiro</artifactId>
			<version>0.2.0-SNAPSHOT</version>
		</dependency>
		<dependency>
			<groupId>org.eclipse.kapua</groupId>
			<artifactId>kapua-device-registry-api</artifactId>
			<version>0.2.0-SNAPSHOT</version>
		</dependency>
		<dependency>
			<groupId>org.eclipse.kapua</groupId>
			<artifactId>kapua-device-asset-api</artifactId>
			<version>0.2.0-SNAPSHOT</version>
		</dependency>
		<dependency>
			<groupId>org.eclipse.kapua</groupId>
			<artifactId>kapua-translator-api</artifactId>
			<version>0.2.0-SNAPSHOT</version>
		</dependency>
		<dependency>
			<groupId>org.eclipse.kapua</groupId>
			<artifactId>kapua-translator-kapua-kura</artifactId>
			<version>0.2.0-SNAPSHOT</version>
		</dependency>
		<dependency>
			<groupId>org.eclipse.kapua</groupId>
			<artifactId>kapua-translator-kura-jms</artifactId>
			<version>0.2.0-SNAPSHOT</version>
		</dependency>
		<dependency>
			<groupId>org.eclipse.kapua</groupId>
			<artifactId>kapua-translator-kura-mqtt</artifactId>
			<version>0.2.0-SNAPSHOT</version>
		</dependency>
		<dependency>
			<groupId>org.eclipse.kapua</groupId>
			<artifactId>kapua-transport-jms</artifactId>
			<version>0.2.0-SNAPSHOT</version>
		</dependency>
		<dependency>
			<groupId>org.eclipse.kapua</groupId>
			<artifactId>kapua-transport-mqtt</artifactId>
			<version>0.2.0-SNAPSHOT</version>
		</dependency>
		<dependency>
			<groupId>org.eclipse.kapua</groupId>
			<artifactId>kapua-transport-test</artifactId>
			<version>0.2.0-SNAPSHOT</version>
		</dependency>

		<dependency>
			<groupId>org.eclipse.kapua</groupId>
			<artifactId>kapua-device-asset-internal</artifactId>
			<version>0.2.0-SNAPSHOT</version>
		</dependency>
		<dependency>
			<groupId>org.eclipse.kapua</groupId>
			<artifactId>kapua-device-bundle-internal</artifactId>
			<version>0.2.0-SNAPSHOT</version>
		</dependency>
		<!-- <dependency>
			<groupId>org.eclipse.kapua</groupId>
			<artifactId>kapua-device-command-internal</artifactId>
			<version>0.2.0-SNAPSHOT</version>
		</dependency>
		<dependency>
			<groupId>org.eclipse.kapua</groupId>
			<artifactId>kapua-device-configuration-internal</artifactId>
			<version>0.2.0-SNAPSHOT</version>
		</dependency>
		<dependency>
			<groupId>org.eclipse.kapua</groupId>
			<artifactId>kapua-device-packages-internal</artifactId>
			<version>0.2.0-SNAPSHOT</version>
		</dependency>

		<dependency>
			<groupId>org.eclipse.kapua</groupId>
			<artifactId>kapua-user-internal</artifactId>
			<version>0.2.0-SNAPSHOT</version>
		</dependency>

		<dependency>
			<groupId>joda-time</groupId>
			<artifactId>joda-time</artifactId>
			<version>0.2.0-SNAPSHOT</version>
		</dependency>

		use logback only for testing
		<dependency>
			<groupId>ch.qos.logback</groupId>
			<artifactId>logback-classic</artifactId>
			<version>0.2.0-SNAPSHOT</version>
			<scope>test</scope>
		</dependency>

		re-declare as provided as our web container will provide this
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
			<version>0.2.0-SNAPSHOT</version>
			<scope>provided</scope>
		</dependency> -->

	</dependencies>
	<build>
		<finalName>api</finalName>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-dependency-plugin</artifactId>
				<executions>
					<execution>
						<id>Create swagger ui</id>
						<phase>prepare-package</phase>
						<goals>
							<goal>unpack</goal>
						</goals>
						<configuration>
							<artifactItems>
								<artifactItem>
									<groupId>org.eclipse.kapua.external</groupId>
									<artifactId>swagger-ui</artifactId>
									<version>${swagger-ui.version}-CQ-10792</version>
									<overWrite>true</overWrite>
									<outputDirectory>${project.build.directory}/tmp/swagger-ui</outputDirectory>
								</artifactItem>
							</artifactItems>
						</configuration>
					</execution>
					<execution>
						<id>Create swagger ui libs</id>
						<phase>prepare-package</phase>
						<goals>
							<goal>unpack</goal>
						</goals>
						<configuration>
							<artifactItems>
								<artifactItem>
									<groupId>org.eclipse.kapua.external</groupId>
									<artifactId>swagger-ui-lib</artifactId>
									<version>${swagger-ui.version}</version>
									<!-- <overWrite>true</overWrite> -->
									<outputDirectory>${project.build.directory}/tmp/swagger-ui-lib</outputDirectory>
								</artifactItem>
							</artifactItems>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-antrun-plugin</artifactId>
				<executions>
					<execution>
						<id>package swagger ui</id>
						<phase>prepare-package</phase>
						<goals>
							<goal>run</goal>
						</goals>
						<configuration>
							<target>
								<echo>Swagger-ui: create doc dir</echo>
								<copy
									todir="${project.build.directory}/${project.build.finalName}/doc">
									<fileset dir="${project.build.directory}/tmp/swagger-ui/" />
								</copy>

								<echo>Swagger-ui-lib: create lib dir for swagger-ui</echo>
								<copy
									todir="${project.build.directory}/${project.build.finalName}/doc/lib">
									<fileset dir="${project.build.directory}/tmp/swagger-ui-lib/" />
								</copy>
							</target>
						</configuration>
					</execution>
				</executions>

			</plugin>

			<!-- To help IntelliJ IDEA correctly recognize the source path when using 
				Maven Auto Import -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-war-plugin</artifactId>
				<configuration>
					<webResources>
						<resource>
							<directory>${basedir}</directory>
							<includes>
								<include>about.html</include>
								<include>epl-v10.html</include>
								<include>notice.html</include>
							</includes>
						</resource>
					</webResources>
					<!-- exclude slf4j-api and logback as the web container has to provide 
						this -->
					<packagingExcludes>
						WEB-INF/lib/slf4j-api-*.jar,
						WEB-INF/lib/logback*.jar
					</packagingExcludes>
				</configuration>
			</plugin>
			
			
			
			
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.3</version>
                <configuration>
                    <source>1.8</source>
                    <target>1.8</target>
                </configuration>
            </plugin>
            
		</plugins>
	</build>
</project>
